<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.online.ecommercePlatform.mapper.SalesStatsMapper">

    <!-- 获取商品销量统计列表 -->
    <select id="selectProductSalesStats" resultType="com.online.ecommercePlatform.dto.ProductSalesStatsDTO">
        SELECT
            p.product_id as productId,
            p.name as productName,
            pi.image_url as imageUrl,
            p.sales as sales,
            p.price as price,
            (p.price * p.sales) as totalAmount,
            p.category_id as categoryId,
            c.name as categoryName
        FROM
            product p
        LEFT JOIN
            productimage pi ON p.product_id = pi.product_id AND pi.is_main = true
        LEFT JOIN
            category c ON p.category_id = c.category_id
        WHERE
            1=1
        <if test="categoryId != null">
            AND (
                p.category_id = #{categoryId}
                OR p.category_id IN (
                    WITH RECURSIVE category_tree AS (
                        SELECT category_id FROM category WHERE parent_id = #{categoryId}
                        UNION ALL
                        SELECT c.category_id FROM category c
                        INNER JOIN category_tree ct ON c.parent_id = ct.category_id
                    )
                    SELECT category_id FROM category_tree
                )
            )
        </if>
        <if test="startDate != null and endDate != null">
            AND p.update_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <choose>
            <when test="sortBy == 'amount'">
                ORDER BY totalAmount ${sortOrder}
            </when>
            <otherwise>
                ORDER BY p.sales ${sortOrder}
            </otherwise>
        </choose>
    </select>

    <!-- 统计商品销量数据总数 -->
    <select id="countProductSalesStats" resultType="int">
        SELECT
            COUNT(*)
        FROM
            product p
        WHERE
            1=1
        <if test="categoryId != null">
            AND (
                p.category_id = #{categoryId}
                OR p.category_id IN (
                    WITH RECURSIVE category_tree AS (
                        SELECT category_id FROM category WHERE parent_id = #{categoryId}
                        UNION ALL
                        SELECT c.category_id FROM category c
                        INNER JOIN category_tree ct ON c.parent_id = ct.category_id
                    )
                    SELECT category_id FROM category_tree
                )
            )
        </if>
        <if test="startDate != null and endDate != null">
            AND p.update_time BETWEEN #{startDate} AND #{endDate}
        </if>
    </select>

    <!-- 获取类别销量统计列表 -->
    <select id="selectCategorySalesStats" resultType="com.online.ecommercePlatform.dto.CategorySalesStatsDTO">
        WITH RECURSIVE category_sales AS (
            -- 获取所有类别的销量汇总数据
            SELECT
                c.category_id as categoryId,
                c.name as categoryName,
                SUM(p.sales) as totalSales,
                SUM(p.price * p.sales) as totalAmount,
                COUNT(p.product_id) as productCount
            FROM
                category c
            LEFT JOIN
                product p ON c.category_id = p.category_id
            <if test="startDate != null and endDate != null">
                AND p.update_time BETWEEN #{startDate} AND #{endDate}
            </if>
            GROUP BY
                c.category_id, c.name
        )
        SELECT
            cs.categoryId,
            cs.categoryName,
            cs.totalSales,
            cs.totalAmount,
            cs.productCount
        FROM
            category_sales cs
        ORDER BY
            cs.totalSales DESC
    </select>

    <!-- 获取总体销量统计数据 -->
    <select id="selectOverallSalesStats" resultType="map">
        SELECT
            SUM(p.sales) as totalSales,
            SUM(p.price * p.sales) as totalAmount,
            COUNT(DISTINCT p.product_id) as productCount,
            COUNT(DISTINCT p.category_id) as categoryCount
        FROM
            product p
        <where>
            <if test="startDate != null and endDate != null">
                p.update_time BETWEEN #{startDate} AND #{endDate}
            </if>
        </where>
    </select>

</mapper> 